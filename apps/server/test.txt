<?php
class connection {
    private $conn;

    public function __construct() {
        $this->conn = pg_connect("host=localhost port=5433 dbname=HRTime user=ersaridhof password=ersa04");

        if (!$this->conn) {
            if (!$this->conn) {
                http_response_code(500);
                echo json_encode([
                    "status" => "error",
                    "type" => "ConnectionError",
                    "message" => "Failed to connect to docker database, please run docker compose"
                ]);
                exit;
            }
        } 
    }

    public function getConnection() {
        return $this->conn;
    }

    public function closeConnection() {
        if ($this->conn) {
            pg_close($this->conn);
        }
    }
}

<?php
class Queries {
    public $createdGajiKaryawan = "INSERT INTO employee_salary(
                                        name, 
                                        status, 
                                        date, 
                                        entry_time, 
                                        clock_out
                                    )   
                                    VALUES (
                                       $1, 
                                       $2, 
                                       $3, 
                                       $4, 
                                       $5
                                       )";
    
    public $updatedKaryawan = "UPDATE employee_salary 
                                    SET 
                                        name = $2, 
                                        status = $3, 
                                        date = $4, 
                                        entry_time = $5, 
                                        clock_out = $6
                                    WHERE 
                                        id =  $1";  

    public $deletedKaryawan = "DELETE FROM employee_salary WHERE id =  $1"; 

    public $getAllGajiKaryawan = "SELECT * FROM employee_salary";

    public $getKaryawanById = "SELECT * FROM employee_salary WHERE id =  $1";
}

<?php
require_once(__DIR__ . '/employeeModule.php');
require_once(__DIR__ . '/employeeView.php');
class EmployeeController {
    private $employeeModule;

    public function __construct() {
        $this->employeeModule = new EmployeeModule();
    }

    public function createEmployee($data) {
        try {
            $this->employeeModule->create($data);
            EmployeeView::success("Employee created successfully.");
        } catch (Exception $e) {
            EmployeeView::error("CreateError", $e->getMessage(), 500);
        }
    }

    public function getEmployees() {
        try {
            $employees = $this->employeeModule->getAll();
            EmployeeView::success("Employee list retrieved successfully.", $employees);
        } catch (Exception $e) {
            EmployeeView::error("FetchError", $e->getMessage(), 500);
        }
    }

    public function getEmployeeById($id) {
        try {
            $employee = $this->employeeModule->getById($id);
            if ($employee) {
                EmployeeView::success("Employee retrieved successfully.", $employee);
            } else {
                EmployeeView::error("NotFound", "Employee not found.", 404);
            }
        } catch (Exception $e) {
            EmployeeView::error("FetchError", $e->getMessage(), 500);
        }
    }

    public function updateEmployee($id, $data) {
        try {
            $this->employeeModule->update($id, $data);
            EmployeeView::success("Employee updated successfully.");
        } catch (Exception $e) {
            EmployeeView::error("UpdateError", $e->getMessage(), 500);
        }
    }

    public function deleteEmployee($id) {
        try {
            $this->employeeModule->delete($id);
            EmployeeView::success("Employee deleted successfully.");
        } catch (Exception $e) {
            EmployeeView::error("DeleteError", $e->getMessage(), 500);
        }
    }
}
?>

<?php
require_once(__DIR__ . '/../db/connection.php');
require(__DIR__ . '/../db/query.php');

class EmployeeModule {
    private $queries;
    private $connection;

    public function __construct() {
        $this->connection = new connection();
        if (!$this->connection->getConnection()) {
            throw new Exception("Database connection failed.");
        }
        $this->queries = new Queries();
    }

    public function getAll() {
        $result = pg_query($this->connection->getConnection(),  $this->queries->getAllGajiKaryawan);
        if (!$result) {
            throw new Exception("Error fetching all employees: " . pg_last_error($this->connection->getConnection()));
        }
        $data = pg_fetch_all($result);
        if (!$data) {
            throw new Exception("No employees found.");
        }
        return $data;
    }

    public function getById($id) {
        $result = pg_query_params($this->connection->getConnection(), $this->queries->getKaryawanById, array($id));
        if (!$result) {
            throw new Exception("Error fetching employee by ID: " . pg_last_error($this->connection->getConnection()));
        }
        return pg_fetch_assoc($result);
    }

    public function create($data) {
        if (empty($data['name']) || empty($data['status']) || empty($data['date']) || empty($data['entry_time']) || empty($data['clock_out'])) {
            throw new Exception("All fields are required.");
        }

        $result = pg_query_params(
            $this->connection->getConnection(), 
            $this->queries->createdGajiKaryawan,
            array(
                $data['name'],
                $data['status'],
                $data['date'],
                $data['entry_time'],
                $data['clock_out']
            )
        );

        if (!$result) {
            throw new Exception("Error creating employee: " . pg_last_error($this->connection->getConnection()));
        }
        return true;
    }

    public function update($id, $data) {
        if (empty($data['name']) || empty($data['status']) || empty($data['date']) || empty($data['entry_time']) || empty($data['clock_out'])) {
            throw new Exception("All fields are required.");
        }

        $result = pg_query_params($this->connection->getConnection(), $this->queries->updatedKaryawan, array(
            $id,    
            $data['name'],
            $data['status'],
            $data['date'],
            $data['entry_time'],
            $data['clock_out']
        ));

        if (!$result) {
            throw new Exception("Error updating employee: " . pg_last_error($this->connection->getConnection()));
        }
        return true;
    }

    public function delete($id) {
        $result = pg_query_params($this->connection->getConnection(), $this->queries->deletedKaryawan, array($id));
        if (!$result) {
            throw new Exception("Error deleting employee: " . pg_last_error($this->connection->getConnection()));
        }
        return true;
    }

    public function __destruct() {
        $this->connection->closeConnection();
    }
}
?>
<?php

class employeeView {
    
    public static function success($message, $data = null) {
        $response = [
            'success' => true,
            'message' => $message,
            'data' => $data,
            'timestamp' => date('c') 
        ];
        self::response($response);
    }

    public static function error($type, $message, $code = 500) {
        http_response_code($code);
        $response = [
            'success' => false,
            'error' => [
                'type' => $type,
                'message' => $message
            ],
            'timestamp' => date('c')
        ];
        self::response($response);
    }

    private static function response($response) {
        header('Content-Type: application/json');
        echo json_encode($response, JSON_PRETTY_PRINT);
        exit;
    }
}

?>
